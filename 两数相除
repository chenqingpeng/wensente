两数相除
给定两个整数，被除数除数和除数除数。将两数相除，要求不使用乘法，除法和mod运算符。

返回被除数除数除以除数divisor得到的商。

整体除法的结果正确截去（truncate）其小数部分，例如：truncate（8.345）= 8以及truncate（-2.7335）= -2
类 解决方案{
     public  int 除（int 股息，int 除数）{
 if（dividend ==  0）{
            返回 0 ;
        }
        如果（被除数== 整数。 MIN_VALUE  &&除数==  - 1）{
            返回 整数。MAX_VALUE ;
        }
        布尔负数；
        负=（股息^除数）< 0 ; //用异或来计算是否符号相异
        long t = 数学。abs（（long）股利）;
        long d = 数学。abs（（long）除数）;
        int结果=  0 ;
        for（int i = 31 ; i > = 0 ; i -）{
            如果（（t >> i）> = d）{//寻找足够大的数2 ^ n *除数
                结果+ = 1 << i; //将结果加上2 ^ n 
                t- = d << i; //将除数位数2 ^ n *除数
            }
        }
        返回负数？ -结果：结果；//符号相异取反
    
    }
}
//输入：10
3
//输出：3
